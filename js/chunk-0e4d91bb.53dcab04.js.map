{"version":3,"sources":["webpack:///../../../src/components/VTabs/VTab.ts","webpack:///../../../src/components/VTabs/VTabsSlider.ts","webpack:///../../../src/components/VWindow/VWindow.ts","webpack:///../../../src/components/VTabs/VTabsItems.ts","webpack:///../../../src/components/VWindow/VWindowItem.ts","webpack:///../../../src/components/VTabs/VTabItem.ts","webpack:///../../../src/components/VSlideGroup/VSlideGroup.ts","webpack:///../../../src/components/VTabs/VTabsBar.ts","webpack:///../../../src/components/VTabs/VTabs.ts"],"names":["baseMixins","name","props","ripple","type","Boolean","default","data","proxyClass","computed","classes","this","groupClasses","value","to","$router","Object","resolve","mounted","methods","click","href","indexOf","e","$el","blur","render","String","role","tabindex","keydown","h","tag","$slots","setBackgroundColor","staticClass","directives","Touch","provide","windowGroup","activeClass","continuous","mandatory","nextIcon","prevIcon","reverse","showArrows","showArrowsOnHover","touch","touchless","required","vertical","internalHeight","transitionHeight","transitionCount","isBooted","isReverse","isActive","computedTransition","axis","internalReverse","direction","hasActiveItems","items","find","item","hasNext","internalIndex","length","hasPrev","findIndex","$vuetify","rtl","watch","updateReverse","val","window","genContainer","children","$createElement","class","style","height","genIcon","VBtn","icon","attrs","lang","t","on","VIcon","large","genControlIcons","icons","getNextIndex","nextIndex","index","getPrevIndex","prevIndex","next","getValue","prev","lastIndex","itemsLength","oldVal","left","right","end","start","isDark","mixins","disabled","reverseTransition","undefined","transition","inTransition","genDefaultSlot","genWindowItem","$listeners","onAfterTransition","onBeforeTransition","onTransitionCancelled","onEnter","el","beforeEnter","afterEnter","enterCancelled","beforeLeave","afterLeave","leaveCancelled","enter","showLazyContent","VWindowItem","id","BaseSlideGroup","Resize","centerActive","validator","v","internalItemsLength","isOverflowing","resizeTimeout","startX","scrollOffset","widths","content","wrapper","__cachedNext","genTransition","__cachedPrev","hasAffixes","isMobile","Math","internalValue","beforeUpdate","$children","updated","genNext","slot","$scopedSlots","key","genContent","ref","genData","onResize","location","upperLocation","hasAffix","genPrev","genWrapper","move","calculateNewOffset","sign","newAbosluteOffset","onAffixClick","onTouchStart","onTouchMove","onTouchEnd","maxScrollOffset","overflowCheck","fn","scrollIntoView","selectedIndex","calculateCenteredOffset","selectedItem","calculateUpdatedOffset","clientWidth","selectedElement","offsetLeft","currentScrollOffset","totalWidth","itemOffset","additionalOffset","offsetCentered","scrollTo","$refs","setWidths","slideGroup","tabsBar","themeClasses","$route","callSlider","onRouteChange","newPath","oldPath","hasNew","hasOld","alignWithTitle","backgroundColor","centered","fixedTabs","grow","Number","hideSlider","iconsAndText","mobileBreakpoint","optional","sliderColor","sliderSize","slider","top","width","transitionTime","isReversed","sliderStyles","computedColor","selectedItems","activeTab","scrollWidth","genBar","dark","light","change","VTabsBar","genSlider","genItems","VTabsItems","VTabsSlider","color","clearTimeout","parseNodes","tab","i","vnode","modifiers","quiet"],"mappings":"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","file":"js/chunk-0e4d91bb.53dcab04.js","sourcesContent":["// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Routable from '../../mixins/routable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { ExtractVue } from './../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\nconst baseMixins = mixins(\n  Routable,\n  // Must be after routable\n  // to overwrite activeClass\n  GroupableFactory('tabsBar'),\n  Themeable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n}\n\nexport default baseMixins.extend<options>().extend(\n  /* @vue/component */\n).extend({\n  name: 'v-tab',\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  data: () => ({\n    proxyClass: 'v-tab--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-tab': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-tab--disabled': this.disabled,\n        ...this.groupClasses,\n      }\n    },\n    value (): any {\n      let to = this.to || this.href || ''\n\n      if (this.$router &&\n        this.to === Object(this.to)\n      ) {\n        const resolve = this.$router.resolve(\n          this.to,\n          this.$route,\n          this.append\n        )\n\n        to = resolve.href\n      }\n\n      return to.replace('#', '')\n    },\n  },\n\n  mounted () {\n    this.onRouteChange()\n  },\n\n  methods: {\n    click (e: KeyboardEvent | MouseEvent): void {\n      // If user provides an\n      // actual link, do not\n      // prevent default\n      if (this.href &&\n        this.href.indexOf('#') > -1\n      ) e.preventDefault()\n\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      'aria-selected': String(this.isActive),\n      role: 'tab',\n      tabindex: 0,\n    }\n    data.on = {\n      ...data.on,\n      keydown: (e: KeyboardEvent) => {\n        if (e.keyCode === keyCodes.enter) this.click(e)\n\n        this.$emit('keydown', e)\n      },\n    }\n\n    return h(tag, data, this.$slots.default)\n  },\n})\n","// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\n/* @vue/component */\nexport default mixins(Colorable).extend({\n  name: 'v-tabs-slider',\n\n  render (h): VNode {\n    return h('div', this.setBackgroundColor(this.color, {\n      staticClass: 'v-tabs-slider',\n    }))\n  },\n})\n","// Styles\nimport './VWindow.sass'\n\n// Types\nimport { VNode, VNodeDirective } from 'vue/types/vnode'\nimport { PropType } from 'vue'\nimport { TouchHandlers } from 'vuetify/types'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport VBtn from '../VBtn'\nimport VIcon from '../VIcon'\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-window',\n\n  directives: { Touch },\n\n  provide (): object {\n    return {\n      windowGroup: this,\n    }\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-window-item--active',\n    },\n    continuous: Boolean,\n    mandatory: {\n      type: Boolean,\n      default: true,\n    },\n    nextIcon: {\n      type: [Boolean, String],\n      default: '$next',\n    },\n    prevIcon: {\n      type: [Boolean, String],\n      default: '$prev',\n    },\n    reverse: Boolean,\n    showArrows: Boolean,\n    showArrowsOnHover: Boolean,\n    touch: Object as PropType<TouchHandlers>,\n    touchless: Boolean,\n    value: {\n      required: false,\n    },\n    vertical: Boolean,\n  },\n\n  data () {\n    return {\n      internalHeight: undefined as undefined | string, // This can be fixed by child class.\n      transitionHeight: undefined as undefined | string, // Intermediate height during transition.\n      transitionCount: 0, // Number of windows in transition state.\n      isBooted: false,\n      isReverse: false,\n    }\n  },\n\n  computed: {\n    isActive (): boolean {\n      return this.transitionCount > 0\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-window--show-arrows-on-hover': this.showArrowsOnHover,\n      }\n    },\n    computedTransition (): string {\n      if (!this.isBooted) return ''\n\n      const axis = this.vertical ? 'y' : 'x'\n      const reverse = this.internalReverse ? !this.isReverse : this.isReverse\n      const direction = reverse ? '-reverse' : ''\n\n      return `v-window-${axis}${direction}-transition`\n    },\n    hasActiveItems (): boolean {\n      return Boolean(\n        this.items.find(item => !item.disabled)\n      )\n    },\n    hasNext (): boolean {\n      return this.continuous || this.internalIndex < this.items.length - 1\n    },\n    hasPrev (): boolean {\n      return this.continuous || this.internalIndex > 0\n    },\n    internalIndex (): number {\n      return this.items.findIndex((item, i) => {\n        return this.internalValue === this.getValue(item, i)\n      })\n    },\n    internalReverse (): boolean {\n      return this.$vuetify.rtl ? !this.reverse : this.reverse\n    },\n  },\n\n  watch: {\n    internalIndex (val, oldVal) {\n      this.isReverse = this.updateReverse(val, oldVal)\n    },\n  },\n\n  mounted () {\n    window.requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    genContainer (): VNode {\n      const children = [this.$slots.default]\n\n      if (this.showArrows) {\n        children.push(this.genControlIcons())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-window__container',\n        class: {\n          'v-window__container--is-active': this.isActive,\n        },\n        style: {\n          height: this.internalHeight || this.transitionHeight,\n        },\n      }, children)\n    },\n    genIcon (\n      direction: 'prev' | 'next',\n      icon: string,\n      click: () => void\n    ) {\n      return this.$createElement('div', {\n        staticClass: `v-window__${direction}`,\n      }, [\n        this.$createElement(VBtn, {\n          props: { icon: true },\n          attrs: {\n            'aria-label': this.$vuetify.lang.t(`$vuetify.carousel.${direction}`),\n          },\n          on: {\n            click: (e: Event) => {\n              e.stopPropagation()\n              click()\n            },\n          },\n        }, [\n          this.$createElement(VIcon, {\n            props: { large: true },\n          }, icon),\n        ]),\n      ])\n    },\n    genControlIcons () {\n      const icons = []\n\n      const prevIcon = this.$vuetify.rtl\n        ? this.nextIcon\n        : this.prevIcon\n\n      /* istanbul ignore else */\n      if (\n        this.hasPrev &&\n        prevIcon &&\n        typeof prevIcon === 'string'\n      ) {\n        const icon = this.genIcon('prev', prevIcon, this.prev)\n        icon && icons.push(icon)\n      }\n\n      const nextIcon = this.$vuetify.rtl\n        ? this.prevIcon\n        : this.nextIcon\n\n      /* istanbul ignore else */\n      if (\n        this.hasNext &&\n        nextIcon &&\n        typeof nextIcon === 'string'\n      ) {\n        const icon = this.genIcon('next', nextIcon, this.next)\n        icon && icons.push(icon)\n      }\n\n      return icons\n    },\n    getNextIndex (index: number): number {\n      const nextIndex = (index + 1) % this.items.length\n      const item = this.items[nextIndex]\n\n      if (item.disabled) return this.getNextIndex(nextIndex)\n\n      return nextIndex\n    },\n    getPrevIndex (index: number): number {\n      const prevIndex = (index + this.items.length - 1) % this.items.length\n      const item = this.items[prevIndex]\n\n      if (item.disabled) return this.getPrevIndex(prevIndex)\n\n      return prevIndex\n    },\n    next () {\n      /* istanbul ignore if */\n      if (!this.hasActiveItems || !this.hasNext) return\n\n      const nextIndex = this.getNextIndex(this.internalIndex)\n      const item = this.items[nextIndex]\n\n      this.internalValue = this.getValue(item, nextIndex)\n    },\n    prev () {\n      /* istanbul ignore if */\n      if (!this.hasActiveItems || !this.hasPrev) return\n\n      const lastIndex = this.getPrevIndex(this.internalIndex)\n      const item = this.items[lastIndex]\n\n      this.internalValue = this.getValue(item, lastIndex)\n    },\n    updateReverse (val: number, oldVal: number) {\n      const itemsLength = this.items.length\n      const lastIndex = itemsLength - 1\n\n      if (itemsLength <= 2) return val < oldVal\n\n      if (val === lastIndex && oldVal === 0) {\n        return true\n      } else if (val === 0 && oldVal === lastIndex) {\n        return false\n      } else {\n        return val < oldVal\n      }\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-window',\n      class: this.classes,\n      directives: [] as VNodeDirective[],\n    }\n\n    if (!this.touchless) {\n      const value = this.touch || {\n        left: () => {\n          this.$vuetify.rtl ? this.prev() : this.next()\n        },\n        right: () => {\n          this.$vuetify.rtl ? this.next() : this.prev()\n        },\n        end: (e: TouchEvent) => {\n          e.stopPropagation()\n        },\n        start: (e: TouchEvent) => {\n          e.stopPropagation()\n        },\n      }\n\n      data.directives.push({\n        name: 'touch',\n        value,\n      })\n    }\n\n    return h('div', data, [this.genContainer()])\n  },\n})\n","// Extensions\nimport VWindow from '../VWindow/VWindow'\n\n// Types & Components\nimport { BaseItemGroup, GroupableInstance } from './../VItemGroup/VItemGroup'\n\n/* @vue/component */\nexport default VWindow.extend({\n  name: 'v-tabs-items',\n\n  props: {\n    mandatory: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VWindow.options.computed.classes.call(this),\n        'v-tabs-items': true,\n      }\n    },\n    isDark (): boolean {\n      return this.rootIsDark\n    },\n  },\n\n  methods: {\n    getValue (item: GroupableInstance, i: number) {\n      return item.id || BaseItemGroup.options.methods.getValue.call(this, item, i)\n    },\n  },\n})\n","// Components\nimport VWindow from './VWindow'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  GroupableFactory('windowGroup', 'v-window-item', 'v-window')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  windowGroup: InstanceType<typeof VWindow>\n}\n\nexport default baseMixins.extend<options>().extend(\n  /* @vue/component */\n).extend({\n  name: 'v-window-item',\n\n  directives: {\n    Touch,\n  },\n\n  props: {\n    disabled: Boolean,\n    reverseTransition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n    transition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n    value: {\n      required: false,\n    },\n  },\n\n  data () {\n    return {\n      isActive: false,\n      inTransition: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return this.groupClasses\n    },\n    computedTransition (): string | boolean {\n      if (!this.windowGroup.internalReverse) {\n        return typeof this.transition !== 'undefined'\n          ? this.transition || ''\n          : this.windowGroup.computedTransition\n      }\n\n      return typeof this.reverseTransition !== 'undefined'\n        ? this.reverseTransition || ''\n        : this.windowGroup.computedTransition\n    },\n  },\n\n  methods: {\n    genDefaultSlot () {\n      return this.$slots.default\n    },\n    genWindowItem () {\n      return this.$createElement('div', {\n        staticClass: 'v-window-item',\n        class: this.classes,\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n        on: this.$listeners,\n      }, this.genDefaultSlot())\n    },\n    onAfterTransition () {\n      if (!this.inTransition) {\n        return\n      }\n\n      // Finalize transition state.\n      this.inTransition = false\n      if (this.windowGroup.transitionCount > 0) {\n        this.windowGroup.transitionCount--\n\n        // Remove container height if we are out of transition.\n        if (this.windowGroup.transitionCount === 0) {\n          this.windowGroup.transitionHeight = undefined\n        }\n      }\n    },\n    onBeforeTransition () {\n      if (this.inTransition) {\n        return\n      }\n\n      // Initialize transition state here.\n      this.inTransition = true\n      if (this.windowGroup.transitionCount === 0) {\n        // Set initial height for height transition.\n        this.windowGroup.transitionHeight = convertToUnit(this.windowGroup.$el.clientHeight)\n      }\n      this.windowGroup.transitionCount++\n    },\n    onTransitionCancelled () {\n      this.onAfterTransition() // This should have the same path as normal transition end.\n    },\n    onEnter (el: HTMLElement) {\n      if (!this.inTransition) {\n        return\n      }\n\n      this.$nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!this.computedTransition || !this.inTransition) {\n          return\n        }\n\n        // Set transition target height.\n        this.windowGroup.transitionHeight = convertToUnit(el.clientHeight)\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('transition', {\n      props: {\n        name: this.computedTransition,\n      },\n      on: {\n        // Handlers for enter windows.\n        beforeEnter: this.onBeforeTransition,\n        afterEnter: this.onAfterTransition,\n        enterCancelled: this.onTransitionCancelled,\n\n        // Handlers for leave windows.\n        beforeLeave: this.onBeforeTransition,\n        afterLeave: this.onAfterTransition,\n        leaveCancelled: this.onTransitionCancelled,\n\n        // Enter handler for height transition.\n        enter: this.onEnter,\n      },\n    }, this.showLazyContent(() => [this.genWindowItem()]))\n  },\n})\n","// Extensions\nimport VWindowItem from '../VWindow/VWindowItem'\n\n/* @vue/component */\nexport default VWindowItem.extend({\n  name: 'v-tab-item',\n\n  props: {\n    id: String,\n  },\n\n  methods: {\n    genWindowItem () {\n      const item = VWindowItem.options.methods.genWindowItem.call(this)\n\n      item.data!.domProps = item.data!.domProps || {}\n      item.data!.domProps.id = this.id || this.value\n\n      return item\n    },\n  },\n})\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchmoveX: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof BaseItemGroup,\n    typeof Mobile,\n  ]>\n/* eslint-enable indent */\n>(\n  BaseItemGroup,\n  Mobile,\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: v => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !this.isMobile\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return this.isOverflowing\n\n        // Always show on mobile\n        case 'mobile': return (\n          this.isMobile ||\n          this.isOverflowing\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !this.isMobile &&\n          this.isOverflowing\n        )\n      }\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      this.$refs.content.style.transform = `translateX(${-val}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      this.scrollOffset = this.startX - e.touchmoveX\n    },\n    onTouchEnd () {\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = this.calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = this.calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    calculateUpdatedOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean, currentScrollOffset: number): number {\n      const clientWidth = selectedElement.clientWidth\n      const offsetLeft = rtl\n        ? (widths.content - selectedElement.offsetLeft - clientWidth)\n        : selectedElement.offsetLeft\n\n      if (rtl) {\n        currentScrollOffset = -currentScrollOffset\n      }\n\n      const totalWidth = widths.wrapper + currentScrollOffset\n      const itemOffset = clientWidth + offsetLeft\n      const additionalOffset = clientWidth * 0.4\n\n      if (offsetLeft <= currentScrollOffset) {\n        currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n      } else if (totalWidth <= itemOffset) {\n        currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n      }\n\n      return rtl ? -currentScrollOffset : currentScrollOffset\n    },\n    calculateCenteredOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean): number {\n      const { offsetLeft, clientWidth } = selectedElement\n\n      if (rtl) {\n        const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n        return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      } else {\n        const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n        return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        this.isOverflowing = this.widths.wrapper < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n","// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'\n\n// Components\nimport VTab from './VTab'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport SSRBootable from '../../mixins/ssr-bootable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { Route } from 'vue-router'\nimport { VNode } from 'vue'\n\ntype VTabInstance = InstanceType<typeof VTab>\n\nexport default mixins(\n  BaseSlideGroup,\n  SSRBootable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-tabs-bar',\n\n  provide () {\n    return {\n      tabsBar: this,\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-tabs-bar': true,\n        'v-tabs-bar--is-mobile': this.isMobile,\n        // TODO: Remove this and move to v-slide-group\n        'v-tabs-bar--show-arrows': this.showArrows,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  watch: {\n    items: 'callSlider',\n    internalValue: 'callSlider',\n    $route: 'onRouteChange',\n  },\n\n  methods: {\n    callSlider () {\n      if (!this.isBooted) return\n\n      this.$emit('call:slider')\n    },\n    genContent () {\n      const render = BaseSlideGroup.options.methods.genContent.call(this)\n\n      render.data = render.data || {}\n      render.data.staticClass += ' v-tabs-bar__content'\n\n      return render\n    },\n    onRouteChange (val: Route, oldVal: Route) {\n      /* istanbul ignore next */\n      if (this.mandatory) return\n\n      const items = this.items as unknown as VTabInstance[]\n      const newPath = val.path\n      const oldPath = oldVal.path\n\n      let hasNew = false\n      let hasOld = false\n\n      for (const item of items) {\n        if (item.to === newPath) hasNew = true\n        else if (item.to === oldPath) hasOld = true\n\n        if (hasNew && hasOld) break\n      }\n\n      // If we have an old item and not a new one\n      // it's assumed that the user navigated to\n      // a path that is not present in the items\n      if (!hasNew && hasOld) this.internalValue = undefined\n    },\n  },\n\n  render (h): VNode {\n    const render = BaseSlideGroup.options.render.call(this, h)\n\n    render.data!.attrs = {\n      role: 'tablist',\n    }\n\n    return render\n  },\n})\n","// Styles\nimport './VTabs.sass'\n\n// Components\nimport VTabsBar from './VTabsBar'\nimport VTabsItems from './VTabsItems'\nimport VTabsSlider from './VTabsSlider'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport { ExtractVue } from './../../util/mixins'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\nconst baseMixins = mixins(\n  Colorable,\n  Proxyable,\n  Themeable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $refs: {\n    items: InstanceType<typeof VTabsBar>\n  }\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-tabs',\n\n  directives: {\n    Resize,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: '',\n    },\n    alignWithTitle: Boolean,\n    backgroundColor: String,\n    centerActive: Boolean,\n    centered: Boolean,\n    fixedTabs: Boolean,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: undefined,\n    },\n    hideSlider: Boolean,\n    iconsAndText: Boolean,\n    mobileBreakpoint: [String, Number],\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    optional: Boolean,\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    right: Boolean,\n    showArrows: [Boolean, String],\n    sliderColor: String,\n    sliderSize: {\n      type: [Number, String],\n      default: 2,\n    },\n    vertical: Boolean,\n  },\n\n  data () {\n    return {\n      resizeTimeout: 0,\n      slider: {\n        height: null as null | number,\n        left: null as null | number,\n        right: null as null | number,\n        top: null as null | number,\n        width: null as null | number,\n      },\n      transitionTime: 300,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-tabs--align-with-title': this.alignWithTitle,\n        'v-tabs--centered': this.centered,\n        'v-tabs--fixed-tabs': this.fixedTabs,\n        'v-tabs--grow': this.grow,\n        'v-tabs--icons-and-text': this.iconsAndText,\n        'v-tabs--right': this.right,\n        'v-tabs--vertical': this.vertical,\n        ...this.themeClasses,\n      }\n    },\n    isReversed (): boolean {\n      return this.$vuetify.rtl && this.vertical\n    },\n    sliderStyles (): object {\n      return {\n        height: convertToUnit(this.slider.height),\n        left: this.isReversed ? undefined : convertToUnit(this.slider.left),\n        right: this.isReversed ? convertToUnit(this.slider.right) : undefined,\n        top: this.vertical ? convertToUnit(this.slider.top) : undefined,\n        transition: this.slider.left != null ? null : 'none',\n        width: convertToUnit(this.slider.width),\n      }\n    },\n    computedColor (): string {\n      if (this.color) return this.color\n      else if (this.isDark && !this.appIsDark) return 'white'\n      else return 'primary'\n    },\n  },\n\n  watch: {\n    alignWithTitle: 'callSlider',\n    centered: 'callSlider',\n    centerActive: 'callSlider',\n    fixedTabs: 'callSlider',\n    grow: 'callSlider',\n    iconsAndText: 'callSlider',\n    right: 'callSlider',\n    showArrows: 'callSlider',\n    vertical: 'callSlider',\n    '$vuetify.application.left': 'onResize',\n    '$vuetify.application.right': 'onResize',\n    '$vuetify.rtl': 'onResize',\n  },\n\n  mounted () {\n    this.$nextTick(() => {\n      window.setTimeout(this.callSlider, 30)\n    })\n  },\n\n  methods: {\n    callSlider () {\n      if (\n        this.hideSlider ||\n        !this.$refs.items ||\n        !this.$refs.items.selectedItems.length\n      ) {\n        this.slider.width = 0\n        return false\n      }\n\n      this.$nextTick(() => {\n        // Give screen time to paint\n        const activeTab = this.$refs.items.selectedItems[0]\n        /* istanbul ignore if */\n        if (!activeTab || !activeTab.$el) {\n          this.slider.width = 0\n          this.slider.left = 0\n          return\n        }\n        const el = activeTab.$el as HTMLElement\n\n        this.slider = {\n          height: !this.vertical ? Number(this.sliderSize) : el.scrollHeight,\n          left: this.vertical ? 0 : el.offsetLeft,\n          right: this.vertical ? 0 : el.offsetLeft + el.offsetWidth,\n          top: el.offsetTop,\n          width: this.vertical ? Number(this.sliderSize) : el.scrollWidth,\n        }\n      })\n\n      return true\n    },\n    genBar (items: VNode[], slider: VNode | null) {\n      const data = {\n        style: {\n          height: convertToUnit(this.height),\n        },\n        props: {\n          activeClass: this.activeClass,\n          centerActive: this.centerActive,\n          dark: this.dark,\n          light: this.light,\n          mandatory: !this.optional,\n          mobileBreakpoint: this.mobileBreakpoint,\n          nextIcon: this.nextIcon,\n          prevIcon: this.prevIcon,\n          showArrows: this.showArrows,\n          value: this.internalValue,\n        },\n        on: {\n          'call:slider': this.callSlider,\n          change: (val: any) => {\n            this.internalValue = val\n          },\n        },\n        ref: 'items',\n      }\n\n      this.setTextColor(this.computedColor, data)\n      this.setBackgroundColor(this.backgroundColor, data)\n\n      return this.$createElement(VTabsBar, data, [\n        this.genSlider(slider),\n        items,\n      ])\n    },\n    genItems (items: VNode | null, item: VNode[]) {\n      // If user provides items\n      // opt to use theirs\n      if (items) return items\n\n      // If no tabs are provided\n      // render nothing\n      if (!item.length) return null\n\n      return this.$createElement(VTabsItems, {\n        props: {\n          value: this.internalValue,\n        },\n        on: {\n          change: (val: any) => {\n            this.internalValue = val\n          },\n        },\n      }, item)\n    },\n    genSlider (slider: VNode | null) {\n      if (this.hideSlider) return null\n\n      if (!slider) {\n        slider = this.$createElement(VTabsSlider, {\n          props: { color: this.sliderColor },\n        })\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-tabs-slider-wrapper',\n        style: this.sliderStyles,\n      }, [slider])\n    },\n    onResize () {\n      if (this._isDestroyed) return\n\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.callSlider, 0)\n    },\n    parseNodes () {\n      let items = null\n      let slider = null\n      const item = []\n      const tab = []\n      const slot = this.$slots.default || []\n      const length = slot.length\n\n      for (let i = 0; i < length; i++) {\n        const vnode = slot[i]\n\n        if (vnode.componentOptions) {\n          switch (vnode.componentOptions.Ctor.options.name) {\n            case 'v-tabs-slider': slider = vnode\n              break\n            case 'v-tabs-items': items = vnode\n              break\n            case 'v-tab-item': item.push(vnode)\n              break\n            // case 'v-tab' - intentionally omitted\n            default: tab.push(vnode)\n          }\n        } else {\n          tab.push(vnode)\n        }\n      }\n\n      /**\n       * tab: array of `v-tab`\n       * slider: single `v-tabs-slider`\n       * items: single `v-tabs-items`\n       * item: array of `v-tab-item`\n       */\n      return { tab, slider, items, item }\n    },\n  },\n\n  render (h): VNode {\n    const { tab, slider, items, item } = this.parseNodes()\n\n    return h('div', {\n      staticClass: 'v-tabs',\n      class: this.classes,\n      directives: [{\n        name: 'resize',\n        modifiers: { quiet: true },\n        value: this.onResize,\n      }],\n    }, [\n      this.genBar(tab, slider),\n      this.genItems(items, item),\n    ])\n  },\n})\n"],"sourceRoot":""}